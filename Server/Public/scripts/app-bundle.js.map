{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/modules/home.js","src/modules/list.js","src/resources/index.js","src/resources/data/data-services.js","src/resources/data/todos.js","src/resources/data/users.js","src/resources/elements/flatpickr.js","src/resources/value-converters/completed.js","src/resources/value-converters/date-format.js"],"names":["App","fetchConfig","activate","configure","configureRouter","config","router","addPipelineStep","title","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","window","regeneratorRuntime","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","Home","users","message","showLogin","loginError","login","email","password","sessionStorage","setItem","JSON","stringify","response","user","navigate","catch","console","log","error","showRegister","firstName","lastName","registerError","save","serverResponse","List","todos","parse","getItem","showList","showCompleted","priorities","getUserTodos","_id","createTodo","todoObj","todo","description","dateDue","Date","priority","editTodo","saveTodo","alert","todoId","filesToUpload","length","uploadFile","deleteTodo","completeTodo","completed","toggleShowCompleted","changeFiles","Array","push","files","removeFile","index","splice","logout","back","globalResources","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","method","url","status","get","fetch","json","data","post","content","body","object","put","uploadFiles","delete","ToDos","TODO_SERVICE","todosArray","id","userId","formData","FormData","forEach","item","append","TODOS_SERVICE","i","Users","USER_SERVICE","FlatPickerCustomElement","Element","defaultBindingMode","twoWay","element","bind","defaultConfig","altInput","altFormat","wrap","_config","Object","assign","onChange","onMonthChange","onYearChange","attached","flatpickr","querySelector","selectedDates","dateStr","instance","value","valueChanged","newDate","undefined","setDate","CompletedValueConverter","toView","array","filter","DateFormatValueConverter","format"],"mappings":";;;;;;;;;;;;;;;;MAKaA,cAAAA,cADZ;AAEC,iBAAYC,WAAZ,EAAwB;AAAA;;AACtB,WAAKA,WAAL,GAAmBA,WAAnB;AACD;;kBAEDC,+BAAU;AACN,WAAKD,WAAL,CAAiBE,SAAjB;AACH;;kBAEDC,2CAAgBC,QAAQC,QAAQ;AAC9B,WAAKA,MAAL,GAAcA,MAAd;AACAD,aAAOE,eAAP,CAAuB,WAAvB;AACAF,aAAOG,KAAP,GAAe,QAAf;AACAH,aAAOI,GAAP,CAAW,CACT,EAAEC,OAAO,CAAC,EAAD,EAAK,MAAL,CAAT,EAAuBC,UAAU,gBAAjC,EAAmDC,MAAM,MAAzD,EADS,EAET,EAAEF,OAAO,MAAT,EAAiBC,UAAU,gBAA3B,EAA6CC,MAAM,MAAnD,EAA2DC,MAAM,IAAjE,EAFS,CAAX;AAID;;;;;;;;;;;ACtBH,QAAIC,aAAa;AACbC,iBAAS,2BADI;AAEbC,kBAAU,cAFG;AAGbC,mBAAW,OAHE;AAIbC,oBAAY,eAJC;AAKbC,mBAAW,EALE;AAMbC,wBAAgB;AANH,KAAjB;;sBASiBN;;;;;;;;oBCTF;AACbO,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCMCnB,YAAAA;;;;;;;;;;;;;;AAHhBoB,SAAOC,kBAAP;;AAGO,WAASrB,SAAT,CAAmBsB,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,MAFH,CAEU,cAFV,EAE0B,UAACC,UAAD,EAAc;AACpCA,iBAAW1B,SAAX;AACJ,KAJA,EAKG2B,OALH,CAKW,WALX;;AAOA,QAAI,sBAAYT,KAAhB,EAAuB;AACrBI,cAAQC,GAAR,CAAYK,kBAAZ;AACD;;AAED,QAAI,sBAAYT,OAAhB,EAAyB;AACvBG,cAAQC,GAAR,CAAYE,MAAZ,CAAmB,iBAAnB;AACD;;AAEDH,YAAQO,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMR,QAAQS,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MChBYC,eAAAA,eADZ;AAEC,kBAAY7B,MAAZ,EAAmB8B,KAAnB,EAAyBvB,IAAzB,EAA+B;AAAA;;AAC7B,WAAKP,MAAL,GAAcA,MAAd;AACA,WAAK8B,KAAL,GAAaA,KAAb;AACA,WAAKvB,IAAL,GAAWA,IAAX;AACA,WAAKwB,OAAL,GAAe,MAAf;AACA,WAAKC,SAAL,GAAgB,IAAhB;AACA,WAAKC,UAAL,GAAkB,EAAlB;AACD;;mBAEDC,yBAAO;AAAA;;AACL,aAAO,KAAK3B,IAAL,CAAU2B,KAAV,CAAgB,KAAKC,KAArB,EAA4B,KAAKC,QAAjC,EACNT,IADM,CACD,oBAAY;AACpBU,uBAAeC,OAAf,CAAuB,MAAvB,EAA+BC,KAAKC,SAAL,CAAeC,SAASC,IAAxB,CAA/B;AACA,cAAKT,UAAL,GAAkB,EAAlB;;AAEI,cAAKjC,MAAL,CAAY2C,QAAZ,CAAqB,MAArB;AACD,OANM,EAONC,KAPM,CAOA,iBAAS;AACdC,gBAAQC,GAAR,CAAYC,KAAZ;AACA,cAAKd,UAAL,GAAkB,sBAAlB;AACD,OAVM,CAAP;AAWH;;mBAICe,uCAAc;AACZ,WAAKN,IAAL,GAAY;AACRO,mBAAW,EADH;AAERC,kBAAU,EAFF;AAGRf,eAAO,EAHC;AAIRC,kBAAU;AAJF,OAAZ;AAMI,WAAKe,aAAL,GAAqB,EAArB;AACA,WAAKnB,SAAL,GAAiB,KAAjB;AACP;;mBAEOoB;;;;;;;;uBAC6B,KAAKtB,KAAL,CAAWsB,IAAX,CAAgB,KAAKV,IAArB;;;AAAvBW;;AACJ,oBAAI,CAACA,eAAeN,KAApB,EAA2B;AACzB,uBAAKf,SAAL,GAAiB,IAAjB;AACD,iBAFD,MAEO;AACL,uBAAKmB,aAAL,GAAqB,2CAArB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KC5CEG,eAAAA,eADZ;AAEA,gBAAYC,KAAZ,EAAmBvD,MAAnB,EAA0B;AAAA;;AACnB,QAAKuD,KAAL,GAAaA,KAAb;AACA,QAAKvD,MAAL,GAAcA,MAAd;AACA,QAAK+B,OAAL,GAAe,MAAf;AACA,QAAKW,IAAL,GAAYH,KAAKiB,KAAL,CAAWnB,eAAeoB,OAAf,CAAuB,MAAvB,CAAX,CAAZ;AACF,QAAKC,QAAL,GAAgB,IAAhB;AACA,QAAKC,aAAL,GAAqB,KAArB;AACE,QAAKC,UAAL,GAAiB,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,EAA0B,UAA1B,CAAjB;AACH;;iBAEKhE;;;;;;;eACF,KAAK2D,KAAL,CAAWM,YAAX,CAAwB,KAAKnB,IAAL,CAAUoB,GAAlC;;;;;;;;;;;;;;;;;iBAGJC,mCAAY;AACd,QAAKC,OAAL,GAAe;AACdC,UAAM,EADQ;AAEdC,iBAAa,EAFC;AAGdC,aAAS,IAAIC,IAAJ,EAHK;AAIb1B,UAAM,KAAKA,IAAL,CAAUoB,GAJH;;AAMdO,cAAU,KAAKT,UAAL,CAAgB,CAAhB;AANI,IAAf;AAQA,QAAKF,QAAL,GAAgB,KAAhB;AACA;;iBAEGY,6BAASL,MAAK;AACT,QAAKD,OAAL,GAAeC,IAAf;AACA,QAAMP,QAAN,GAAiB,KAAjB;AACH;;iBAEGa;;;;;;;aACL,KAAKP;;;;;;eACc,KAAKT,KAAL,CAAWH,IAAX,CAAgB,KAAKY,OAArB;;;AAAjBvB;;aACDA,SAASM;;;;;AACXyB,cAAM,sCAAN;;;;;AAEKC,iBAAShC,SAASqB;;cACnB,KAAKY,aAAL,IAAsB,KAAKA,aAAL,CAAmBC;;;;;;eAClC,KAAKpB,KAAL,CAAWqB,UAAX,CAAsB,KAAKF,aAA3B,EAA0C,KAAKhC,IAAL,CAAUoB,GAApD,EAAyDW,MAAzD;;;AACN,aAAKC,aAAL,GAAqB,EAArB;;;AAGN,aAAKhB,QAAL,GAAgB,IAAhB;;;;;;;;;;;;;;;;;iBAGFmB,iCAAWZ,MAAK;AACT,QAAKV,KAAL,CAAWsB,UAAX,CAAsBZ,KAAKH,GAA3B;AACJ;;iBACHgB,qCAAab,MAAK;AACdA,QAAKc,SAAL,GAAiB,CAACd,KAAKc,SAAvB;AACA,QAAKf,OAAL,GAAeC,IAAf;AACA,QAAKM,QAAL;AACF;;iBACFS,qDAAqB;AACd,QAAKrB,aAAL,GAAqB,CAAC,KAAKA,aAA3B;AACL;;iBAEFsB,qCAAa;AACT,QAAKP,aAAL,GAAqB,IAAIQ,KAAJ,EAArB;AACA,QAAKR,aAAL,CAAmBS,IAAnB,CAAwB,KAAKC,KAAL,CAAW,CAAX,CAAxB;AACD;;iBACHC,iCAAWC,OAAM;AACb,QAAKZ,aAAL,CAAmBa,MAAnB,CAA0BD,KAA1B,EAAgC,CAAhC;AACD;;iBAEAE,2BAAQ;AACV,QAAKxF,MAAL,CAAY2C,QAAZ,CAAqB,MAArB;AACA;;iBACD8C,uBAAM;AACL,QAAK/B,QAAL,GAAc,IAAd;AACA;;;;;;;;;;;UC9Ec7D,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B;AAChCA,WAAO2F,eAAP,CAAuB,CAAC,gCAAD,EAAkC,8BAAlC,EACvB,sBADuB,CAAvB;AAED;;;;;;;;;;;;;;;;;;QCCYC,uBAAAA,uBADZ;AAGA,8BAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACjB,iBAAKC,UAAL,GAAkBD,IAAlB;AACM,iBAAKE,QAAL,GAAgB,4BAAhB;AACA,iBAAKD,UAAL,CAAgBhG,SAAhB,CAA0B,kBAAU;AAChCE,uBACKgG,WADL,CACiB,MAAKD,QADtB,EAEKE,YAFL,CAEkB;AACdC,iCAAa,aADC;AAEdC,6BAAS;AACL,kCAAU,kBADL;AAEL,4CAAoB;AAFf;AAFK,iBAFlB,EASKC,eATL,CASqB;AACjBC,2BADiB,mBACTA,QADS,EACA;AACbvD,gCAAQC,GAAR,iBAA0BsD,SAAQC,MAAlC,SAA4CD,SAAQE,GAApD;AACA,+BAAOF,QAAP;AACH,qBAJgB;AAKjB3D,4BALiB,oBAKRA,SALQ,EAKE;AACfI,gCAAQC,GAAR,eAAwBL,UAAS8D,MAAjC,SAA2C9D,UAAS6D,GAApD;AACA,+BAAO7D,SAAP;AACH;AARgB,iBATrB;AAmBC,aApBL;AAqBC;;+BAKT+D,mBAAIF,KAAK;AACL,mBAAO,KAAKT,UAAL,CAAgBY,KAAhB,CAAsBH,GAAtB,EACF3E,IADE,CACG;AAAA,uBAAYc,SAASiE,IAAT,EAAZ;AAAA,aADH,EAEF/E,IAFE,CAEG,gBAAQ;AACV,uBAAOgF,IAAP;AACH,aAJE,EAKF/D,KALE,CAKI,iBAAS;AACZ,uBAAOG,KAAP;AACH,aAPE,CAAP;AAQH;;+BAED6D,qBAAKC,SAASP,KAAK;AACf,mBAAO,KAAKT,UAAL,CACFY,KADE,CACIH,GADJ,EACS;AACRD,wBAAQ,MADA;AAERS,sBAAM,8BAAKD,OAAL;AAFE,aADT,EAKFlF,IALE,CAKG;AAAA,uBAAYc,SAASiE,IAAT,EAAZ;AAAA,aALH,EAMF/E,IANE,CAMG,kBAAU;AACZ,uBAAOoF,MAAP;AACH,aARE,EASFnE,KATE,CASI,iBAAS;AACZ,uBAAOG,KAAP;AACH,aAXE,CAAP;AAYH;;+BAEDiE,mBAAIH,SAASP,KAAK;AACd,mBAAO,KAAKT,UAAL,CACFY,KADE,CACIH,GADJ,EACS;AACRD,wBAAQ,KADA;AAERS,sBAAM,8BAAKD,OAAL;AAFE,aADT,EAKFlF,IALE,CAKG;AAAA,uBAAYc,SAASiE,IAAT,EAAZ;AAAA,aALH,EAMF/E,IANE,CAMG,kBAAU;AACZ,uBAAOoF,MAAP;AACH,aARE,EASFnE,KATE,CASI,iBAAS;AACZ,uBAAOG,KAAP;AACH,aAXE,CAAP;AAYC;;+BAEDkE,mCAAY7B,OAAOkB,KAAI;AACf,mBAAO,KAAKT,UAAL,CACNY,KADM,CACAH,GADA,EACK;AACRD,wBAAQ,MADA;AAERS,sBAAM1B;AAFE,aADL,EAKNzD,IALM,CAKD;AAAA,uBAAYc,SAASiE,IAAT,EAAZ;AAAA,aALC,EAMN/E,IANM,CAMD,kBAAU;AACZ,uBAAOoF,MAAP;AACH,aARM,EASNnE,KATM,CASA,iBAAS;AACZ,uBAAOG,KAAP;AACH,aAXM,CAAP;AAYH;;+BAGTmE,0BAAOZ,KAAI;AACP,mBAAO,KAAKT,UAAL,CACFY,KADE,CACIH,GADJ,EACS;AACRD,wBAAQ;AADA,aADT,EAIF1E,IAJE,CAIG;AAAA,uBAAYc,SAASiE,IAAT,EAAZ;AAAA,aAJH,EAKF/E,IALE,CAKG,kBAAU;AACZ,uBAAOoF,MAAP;AACH,aAPE,EAQFnE,KARE,CAQI,iBAAS;AACZ,uBAAOG,KAAP;AACH,aAVE,CAAP;AAWC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCnGQoE,gBAAAA,gBAHR;AAID,uBAAYR,IAAZ,EAAkB;AAAA;;AACZ,iBAAKA,IAAL,GAAYA,IAAZ;AACA,iBAAKS,YAAL,GAAoB,OAApB;AACH,iBAAKC,UAAL,GAAkB,EAAlB;AACN;;wBAEKxD;kFAAayD;;;;;;;uCACM,KAAKX,IAAL,CAAUH,GAAV,CAAc,KAAKY,YAAL,GAAoB,QAApB,GAA+BE,EAA7C;;;AAAjB7E;;AACJ,oCAAG,CAACA,SAASM,KAAV,IAAmB,CAACN,SAASV,OAAhC,EAAwC;AACpC,yCAAKsF,UAAL,GAAkB5E,QAAlB;AACH;;;;;;;;;;;;;;;;;wBAIOW;oFAAKa;;;;;;;qCACNA;;;;;oCACCA,KAAKH;;;;;;uCACY,KAAK6C,IAAL,CAAUC,IAAV,CAAe3C,IAAf,EAAqB,KAAKmD,YAA1B;;;AAAjB3E;;AACJ,oCAAI,CAACA,SAASM,KAAd,EAAoB;AAChB,yCAAKsE,UAAL,CAAgBlC,IAAhB,CAAqB1C,QAArB;AACH;kEACAA;;;;uCAEgC,KAAKkE,IAAL,CAAUK,GAAV,CAAc/C,IAAd,EAAoB,KAAKmD,YAAL,GAAoB,GAApB,GAA0BnD,KAAKH,GAAnD;;;AAAjBrB;;AACJ,oCAAG,CAACA,UAASM,KAAb,EAAmB,CAElB;kEACMN;;;;;;;;;;;;;;;;;wBAKrBmC;oFAAWQ,OAAOmC,QAAQ9C;;;;;;AACpB+C,2CAAW,IAAIC,QAAJ;;AACfrC,sCAAMsC,OAAN,CAAc,UAACC,IAAD,EAAOrC,KAAP,EAAiB;AAC/BkC,6CAASI,MAAT,CAAgB,SAAStC,KAAzB,EAAgCqC,IAAhC;AACK,iCAFL;;;uCAIqB,KAAKhB,IAAL,CAAUM,WAAV,CAAsBO,QAAtB,EAAgC,KAAKJ,YAAL,GAC/C,UAD+C,GAClCG,MADkC,GACzB,GADyB,GACnB9C,MADb;;;AAAjBhC;kEAEGA;;;;;;;;;;;;;;;;;wBAIToC;oFAAWyC;;;;;;;uCACQ,KAAKX,IAAL,CAAUO,MAAV,CAAiB,KAAKW,aAAL,GAAqB,GAArB,GAA2BP,EAA5C;;;AAAjB7E;;AACJ,oCAAG,CAACA,SAASM,KAAb,EAAmB;AACf,yCAAQ+E,CAAR,GAAY,CAAZ,EAAeA,IAAI,KAAKT,UAAL,CAAgB1C,MAAnC,EAA2CmD,GAA3C,EAA+C;AAC3C,4CAAG,KAAKT,UAAL,CAAgBS,CAAhB,EAAmBhE,GAAnB,KAA2BwD,EAA9B,EAAiC;AAC7B,iDAAKD,UAAL,CAAgB9B,MAAhB,CAAuBuC,CAAvB,EAAyB,CAAzB;AACH;AACJ;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCtDQC,gBAAAA,gBADZ;AAED,uBAAYpB,IAAZ,EAAkB;AAAA;;AACV,iBAAKA,IAAL,GAAYA,IAAZ;AACA,iBAAKqB,YAAL,GAAoB,OAApB;AACH;;wBAIC5E;kFAAMV;;;;;;qCACLA;;;;;;;uCAEgC,KAAKiE,IAAL,CAAUC,IAAV,CAAelE,IAAf,EAAqB,KAAKsF,YAA1B;;;AAAvB3E;iEACGA;;;;;;AAIPR,wCAAQC,GAAR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QChBCmF,kCAAAA,kCADZ,8BAAOC,OAAP,WAEA,gCAAS,EAACC,oBAAoB,8BAAYC,MAAjC,EAAT;AACD,yCAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,iBAAKA,OAAL,GAAeA,OAAf;AACD;;0CAEDC,uBAAO;AACK,gBAAMC,gBAAgB;AACjBC,0BAAU,IADO;AAEjBC,2BAAW,QAFM;AAG1BC,sBAAM;AAHoB,aAAtB;AAKC,iBAAKC,OAAL,GAAeC,OAAOC,MAAP,CAAc,EAAd,EAAkBN,aAAlB,CAAf;AACD,iBAAKI,OAAL,CAAaG,QAAb,GAAwB,KAAKH,OAAL,CAAaI,aAAb,GAA6B,KAAKJ,OAAL,CAAaK,YAAb,GAA4B,KAAKF,QAAL,CAAcR,IAAd,CAAmB,IAAnB,CAAjF;AACH;;0CAGLW,+BAAW;AACC,iBAAKC,SAAL,GAAiB,wBAAc,KAAKb,OAAL,CAAac,aAAb,CAA2B,oBAA3B,CAAd,EAAgE,KAAKR,OAArE,CAAjB;AACN;;0CACFG,6BAASM,eAAeC,SAASC,UAAU;AACnC,iBAAKC,KAAL,GAAaH,cAAc,CAAd,CAAb;AACP;;0CAEDI,uCAAe;AACP,gBAAI,CAAC,KAAKN,SAAV,EAAqB;AACjB;AACH;AACD,gBAAI,KAAKK,KAAL,KAAe,KAAKL,SAAL,CAAeE,aAAf,CAA6B,CAA7B,CAAnB,EAAmD;AAC/C;AACH;AACD,gBAAIK,UAAU,KAAKF,KAAL,GAAa,KAAKA,KAAlB,GAA0BG,SAAxC;AACA,iBAAKR,SAAL,CAAeS,OAAf,CAAuBF,OAAvB;AACH;;;;;;;;;;;;;;;;;;;;;QCrCAG,kCAAAA;;;;;0CAENC,yBAAOC,OAAOP,OAAO;AACnB,gBAAG,CAACA,KAAJ,EAAU;AACT,uBAAOO,MAAMC,MAAN,CAAa,gBAAQ;AAC1B,2BAAO,CAACpC,KAAK5C,SAAb;AACD,iBAFM,CAAP;AAGA,aAJD,MAIO;AACL,uBAAO+E,KAAP;AACD;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;MCRKE,mCAAAA;;;;;uCAEbH,yBAAON,OAAO;AACd,UAAGA,UAAUG,SAAV,IAAuBH,UAAU,IAApC,EAAyC;AACrC;AACG;;AAEH,aAAO,sBAAOA,KAAP,EAAcU,MAAd,CAAqB,aAArB,CAAP;AACF","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\nimport {FetchConfig} from 'aurelia-auth';\nimport {AuthorizeStep} from 'aurelia-auth';\n\n@inject(FetchConfig)\nexport class App {\n  constructor(fetchConfig){\n    this.fetchConfig = fetchConfig;\n  }\n\n  activate(){\n      this.fetchConfig.configure();\n  }\n\n  configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep);\n    config.title = 'Chirps';\n    config.map([\n      { route: ['', 'home'], moduleId: './modules/home', name: 'Home' },\n      { route: 'list', moduleId: './modules/list', name: 'Wall', auth: true }\n    ]);\n  }}\n\n","var authConfig = {\r\n    baseUrl: \"http://localhost:5000/api\",\r\n    loginUrl: '/users/login',\r\n    tokenName: 'token',\r\n    authHeader: 'Authorization',\r\n    authToken: '',\r\n    logoutRedirect: '#/home'\r\n  }\r\n  \r\n  export default authConfig;\r\n  ","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport config from './auth-config';\nimport regeneratorRuntime from 'regenerator-runtime';\nwindow.regeneratorRuntime = regeneratorRuntime;\n\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig)=>{\n      baseConfig.configure(config);\n })\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {Users} from '../resources/data/users';\r\nimport {AuthService} from 'aurelia-auth';\r\n\r\n\r\n@inject(Router, Users, AuthService )\r\nexport class Home {\r\n  constructor(router,users,auth) {\r\n    this.router = router;\r\n    this.users = users;\r\n    this.auth =auth;\r\n    this.message = 'Home';\r\n    this.showLogin= true;\r\n    this.loginError = '';\r\n  }\r\n\r\n  login(){\r\n    return this.auth.login(this.email, this.password)\r\n    .then(response => {\r\n  sessionStorage.setItem(\"user\", JSON.stringify(response.user));\r\n  this.loginError = \"\";\r\n\r\n      this.router.navigate('list');\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      this.loginError = \"Invalid credentials.\";\r\n    });\r\n};\r\n\r\n\r\n\r\n  showRegister(){\r\n    this.user = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n        }\r\n        this.registerError = \"\";\r\n        this.showLogin = false;\r\n}\r\n\r\n  async save() {\r\n          let serverResponse = await this.users.save(this.user);\r\n          if (!serverResponse.error) {\r\n            this.showLogin = true;\r\n          } else {\r\n            this.registerError = \"There was a problem registering the user.\"\r\n          }\r\n    }\r\n\r\n \r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {ToDos} from '../resources/data/todos';\r\n\r\n\r\n@inject(ToDos, Router)\r\nexport class List {\r\n\tconstructor(todos, router){\r\n        this.todos = todos;        \r\n        this.router = router;\r\n        this.message = \"List\";\r\n        this.user = JSON.parse(sessionStorage.getItem('user'));\r\n\t\t    this.showList = true;\r\n\t\t    this.showCompleted = false;\t\t\r\n        this.priorities =['Low', 'Medium', 'High', 'Critical'];\r\n    }\r\n    \r\n    async activate(){\r\n\t\tawait this.todos.getUserTodos(this.user._id);\r\n\t}\r\n\r\n    createTodo(){\t\r\n\t\tthis.todoObj = {\r\n\t\t\ttodo: \"\",\r\n\t\t\tdescription: \"\",\r\n\t\t\tdateDue: new Date(),\r\n\t\t\t user: this.user._id,\r\n\t\t\t \r\n\t\t\tpriority: this.priorities[0]\r\n\t\t}\r\n\t\tthis.showList = false;\t\t\r\n\t}\r\n\t\r\n\t    editTodo(todo){\r\n\t\t        this.todoObj = todo;\r\n\t\t        this. showList = false;\r\n\t\t    }\r\n\t\t\r\n    async saveTodo(){\r\n\t\tif(this.todoObj){\t\t\r\n\t\t\tlet response = await this.todos.save(this.todoObj);\r\n\t\t\tif(response.error){\r\n\t\t\t\talert(\"There was an error creating the ToDo\");\r\n\t\t\t} else {\r\n\t\t\t\t var todoId = response._id;\r\n\t\t\t\t if(this.filesToUpload && this.filesToUpload.length){\r\n\t\t\t\t     await this.todos.uploadFile(this.filesToUpload, this.user._id, todoId);\r\n\t\t\t\t     this.filesToUpload = [];\r\n\t\t\t\t }\t\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\tthis.showList = true;\r\n\t\t}\r\n\t}\r\n\tdeleteTodo(todo){\r\n\t\t      this.todos.deleteTodo(todo._id);\r\n\t\t }\r\n\tcompleteTodo(todo){\r\n\t\t\t  todo.completed = !todo.completed;\r\n\t\t\t  this.todoObj = todo;\r\n\t\t\t  this.saveTodo();\r\n\t\t}\r\n\ttoggleShowCompleted(){\r\n\t\t   \t  this.showCompleted = !this.showCompleted;\r\n\t\t}\r\n\t\t\t\t\t\t\r\n\tchangeFiles(){\r\n\t\t\t  this.filesToUpload = new Array(); \r\n\t\t\t  this.filesToUpload.push(this.files[0]);\r\n\t\t\t}\r\n\tremoveFile(index){\r\n\t\t\t  this.filesToUpload.splice(index,1);\r\n\t\t\t}\r\n\t\t\t\t\t\t\r\n    logout(){\r\n\t\tthis.router.navigate('home');\r\n\t}\r\n\tback(){\r\n\t\tthis.showList=true\r\n\t}\r\n    \r\n}","export function configure(config) {\n  config.globalResources(['./value-converters/date-format','./value-converters/completed',\n  './elements/flatpickr']);\n}\n","import { inject } from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class DataServices {\r\n\r\n\tconstructor(http) {\r\n\t\tthis.httpClient = http;\r\n        this.BASE_URL = \"http://localhost:5000/api/\";\r\n        this.httpClient.configure(config => {\r\n            config\r\n                .withBaseUrl(this.BASE_URL)\r\n                .withDefaults({\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'X-Requested-With': 'Fetch'\r\n                }\r\n                })\r\n                .withInterceptor({\r\n                request(request) {\r\n                    console.log(`Requesting ${request.method} ${request.url}`);\r\n                    return request;\r\n                },\r\n                response(response) {\r\n                    console.log(`Received ${response.status} ${response.url}`);\r\n                    return response;\r\n                }\r\n                });\r\n            });\r\n        }\r\n    \r\n\t\r\n\r\n\r\nget(url) {\r\n    return this.httpClient.fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            return data;\r\n        })\r\n        .catch(error => {\r\n            return error;\r\n        });\r\n}\r\n\r\npost(content, url) {\r\n    return this.httpClient\r\n        .fetch(url, {\r\n            method: 'post',\r\n            body: json(content)\r\n        })\r\n        .then(response => response.json())\r\n        .then(object => {\r\n            return object;\r\n        })\r\n        .catch(error => {\r\n            return error;\r\n        });\r\n}\r\n\r\nput(content, url) {\r\n    return this.httpClient\r\n        .fetch(url, {\r\n            method: 'put',\r\n            body: json(content)\r\n        })\r\n        .then(response => response.json())\r\n        .then(object => {\r\n            return object;\r\n        })\r\n        .catch(error => {\r\n            return error;\r\n        });\r\n    }\r\n\r\n    uploadFiles(files, url){\r\n            return this.httpClient\r\n            .fetch(url, {\r\n                method: 'post',\r\n                body: files\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n        }\r\n        \r\n\r\ndelete(url){\r\n    return this.httpClient\r\n        .fetch(url, {\r\n            method: 'delete'\r\n        })\r\n        .then(response => response.json())\r\n        .then(object => {\r\n            return object;\r\n        })\r\n        .catch(error => {\r\n            return error ;\r\n        });\r\n    }\r\n\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n    @inject(DataServices)\r\n\r\n\r\nexport class ToDos {\r\n    constructor(data) {\r\n        \t\tthis.data = data;\r\n        \t\tthis.TODO_SERVICE = 'todos';\r\n   \t\t\t\tthis.todosArray = [];\r\n}\r\n\r\nasync getUserTodos(id){\r\n    let response = await this.data.get(this.TODO_SERVICE + \"/user/\" + id);\r\n    if(!response.error && !response.message){\r\n        this.todosArray = response;\r\n    }\r\n\r\n\r\n}\r\n      async save(todo){\r\n        if(todo){\r\n        if(!todo._id){       \r\n        let response = await this.data.post(todo, this.TODO_SERVICE);\r\n        if (!response.error){\r\n            this.todosArray.push(response)\r\n        }\r\n\t\treturn response;\r\n\t        } else {\r\n                    let response = await this.data.put(todo, this.TODO_SERVICE + \"/\" + todo._id);\r\n                    if(!response.error){\r\n                        // this.updateArray(response);\r\n                    }\r\n                    return response;\r\n                    }\r\n                }\r\n                        }\r\n\r\nasync uploadFile(files, userId, todoId){\r\n        let formData = new FormData();\r\n        files.forEach((item, index) => {\r\n        formData.append(\"file\" + index, item);\r\n            });\r\n                                \r\n        let response = await this.data.uploadFiles(formData, this.TODO_SERVICE +\r\n            \t\t\"/upload/\" + userId + \"/\" + todoId);\r\n        return response;\r\n}\r\n                            \r\n                        \r\nasync deleteTodo(id){\r\n    let response = await this.data.delete(this.TODOS_SERVICE + \"/\" + id);\r\n    if(!response.error){\r\n        for(let i = 0; i < this.todosArray.length; i++){\r\n            if(this.todosArray[i]._id === id){\r\n                this.todosArray.splice(i,1);\r\n            }\r\n        }\r\n    }\r\n}\r\n}","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class Users {\r\nconstructor(data) {\r\n        this.data = data;\r\n        this.USER_SERVICE = 'users';\r\n    }\r\n\r\n\r\n//call save from the home js and pass data into the sever\r\nasync save (user){\r\n    if(user){\r\n        try{\r\n            let serverResponse = await this.data.post(user, this.USER_SERVICE);\r\n            return serverResponse;\r\n         } \r\n         catch (error)\r\n         { \r\n            console.log(error);\r\n            return error;\r\n        }\r\n    }\r\n}\r\n}\r\n\r\n","import {inject, bindable, bindingMode} from 'aurelia-framework';\r\nimport Flatpickr from 'flatpickr';\r\n\r\n@inject(Element)\r\nexport class FlatPickerCustomElement {\r\n@bindable({defaultBindingMode: bindingMode.twoWay}) value;\r\nconstructor(element) {\r\n  this.element = element;\r\n}\r\n\r\nbind() {\r\n            const defaultConfig = {\r\n                \taltInput: true,\r\n                \taltFormat: \"F j, Y\",\r\n        wrap: true\r\n            };\r\n    \u000b        this._config = Object.assign({}, defaultConfig);\r\n            this._config.onChange = this._config.onMonthChange = this._config.onYearChange = this.onChange.bind(this);\r\n        }\r\n\r\n\r\n    attached() {\r\n                this.flatpickr = new Flatpickr(this.element.querySelector('.aurelia-flatpickr'), this._config);\r\n         }\r\n        onChange(selectedDates, dateStr, instance) {\r\n                this.value = selectedDates[0] \r\n        }\r\n        \r\n        valueChanged() {\r\n                if (!this.flatpickr) {\r\n                    return;\r\n                }\r\n                if (this.value === this.flatpickr.selectedDates[0]){\r\n                    return;\r\n                }\r\n                let newDate = this.value ? this.value : undefined;      \r\n                this.flatpickr.setDate(newDate);\r\n            }\r\n            }\r\n            \r\n\r\n","export class CompletedValueConverter {\r\n      \r\n       toView(array, value) {\r\n         if(!value){\r\n          return array.filter(item => {\r\n            return !item.completed;\r\n          })\r\n         } else {\r\n           return array;\r\n         }\r\n       }\r\n      }\r\n    ","import moment from 'moment';\r\n\r\nexport class DateFormatValueConverter {\r\n\r\ntoView(value) {\r\nif(value === undefined || value === null){\r\n    return;\r\n    \t\t}\r\n    \r\n    return moment(value).format('MMM Do YYYY');\r\n\t}\r\n}\r\n"],"sourceRoot":".."}